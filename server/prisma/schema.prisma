generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String            @id @default(cuid())
  email              String            @unique
  name               String
  hashedPassword     String
  role               UserRole          @default(USER)
  reactCoinsCount    Int               @default(0)
  cart               Cart[]
  deliveryAddresses  DeliveryAddress[]
  billingCards       BillingCard[]
  orders             Order[]
  phoneNumber        String?           @unique
  hashedRefreshToken String?
  createdAt          DateTime          @default(now())
  updatedAt          DateTime          @updatedAt

  @@map("users")
}

model Cart {
  id       String        @id @default(cuid())
  products CartProduct[]
  user     User          @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId   String        @unique

  @@map("carts")
}

model CartProduct {
  id                 String  @id @default(cuid())
  title              String  @unique
  fullPrice          Float
  discountPercent    Int     @default(0)
  weight             Float
  tag                String
  imagePath          String?
  count              Int     @default(1)
  productReferenceId String
  cart               Cart    @relation(fields: [cartId], references: [id], onDelete: Cascade)
  cartId             String

  @@map("cartProducts")
}

model DeliveryAddress {
  id           String   @id @default(cuid())
  city         String
  street       String
  house        String
  entrance     Int
  floor        Int
  flatOrOffice Int
  intercom     Int?
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId       String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@map("deliveryAddresses")
}

model BillingCard {
  id          String          @id @default(cuid())
  number      Int[]
  cvc         Int
  expiredDate DateTime
  type        BillingCardType @default(DEFAULT)
  user        User            @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt

  @@map("billingCards")
}

model Order {
  id                   String         @id @default(cuid())
  deliveryAddress      String
  products             OrderProduct[]
  cutleryCount         Int            @default(0)
  totalCost            Float
  productsCost         Float
  deliveryCost         Float
  serviceFee           Float
  status               OrderStatus    @default(ASSEMBLY)
  recipientPhoneNumber String
  recipientName        String
  commentary           String?
  user                 User           @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId               String
  createdAt            DateTime       @default(now())
  updatedAt            DateTime       @updatedAt
  deliveredAt          DateTime

  @@map("orders")
}

model OrderProduct {
  id        String   @id @default(cuid())
  title     String
  price     Float
  count     Int
  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  orderId   String
  imagePath String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("orderProducts")
}

model ProductCategory {
  id            String               @id @default(cuid())
  title         String               @unique
  description   String
  subcategories ProductSubcategory[]
  imagePath     String?

  @@map("productCategories")
}

model ProductSubcategory {
  id              String          @id @default(cuid())
  title           String          @unique
  description     String
  products        Product[]
  productCategory ProductCategory @relation(fields: [categoryId], references: [id], onDelete: Cascade)
  categoryId      String

  @@map("productSubcategories")
}

model Product {
  id                 String             @id @default(cuid())
  title              String             @unique
  description        String
  fullPrice          Float
  discountPercent    Int                @default(0)
  weight             Float
  tag                String
  imagePath          String?
  productSubcategory ProductSubcategory @relation(fields: [subcategoryId], references: [id], onDelete: Cascade)
  subcategoryId      String

  @@map("products")
}

enum UserRole {
  USER
  ADMIN
}

enum BillingCardType {
  DEFAULT
  GOLD
}

enum OrderStatus {
  ASSEMBLY
  ON_THE_WAY
  DELIVERED
  CANCELED
}
